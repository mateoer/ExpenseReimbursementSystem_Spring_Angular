{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./general-route.service\";\nexport let PasswordResetService = /*#__PURE__*/(() => {\n  class PasswordResetService {\n    constructor(http, urlService) {\n      this.http = http;\n      this.urlService = urlService;\n    }\n\n    validateFromLogin(username, email) {\n      return this.http.post(`${this.urlService.FROM_LOGIN}`, {\n        \"username\": username,\n        \"email\": email\n      }, {\n        responseType: 'text'\n      });\n    }\n\n    validateFromHome(oldpassword, newpassword) {\n      return this.http.post(`${this.urlService.FROM_HOME}`, {\n        \"user\": {\n          \"username\": sessionStorage.getItem('username'),\n          \"password\": oldpassword\n        },\n        \"newPassword\": newpassword\n      }, {\n        responseType: 'text'\n      });\n    }\n\n    validateResetToken(resetToken, new_password) {\n      return this.http.post(`${this.urlService.RESET_WITH_TOKEN}`, {\n        \"user\": {\n          \"passwordResetToken\": resetToken\n        },\n        \"newPassword\": new_password\n      }, {\n        responseType: 'text'\n      });\n    }\n\n  }\n\n  PasswordResetService.ɵfac = function PasswordResetService_Factory(t) {\n    return new (t || PasswordResetService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.GeneralRouteService));\n  };\n\n  PasswordResetService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PasswordResetService,\n    factory: PasswordResetService.ɵfac,\n    providedIn: 'root'\n  });\n  return PasswordResetService;\n})();","map":null,"metadata":{},"sourceType":"module"}