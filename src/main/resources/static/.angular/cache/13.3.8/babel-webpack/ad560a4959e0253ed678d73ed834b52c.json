{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/login-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction LoginComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.noUserFoundMessage);\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(loginService, _route, location) {\n      this.loginService = loginService;\n      this._route = _route;\n      this.location = location;\n      this.loginForm = {\n        username: '',\n        password: ''\n      };\n      this.userCredentials = {\n        user: {\n          userId: 0,\n          username: '',\n          password: '',\n          firstName: '',\n          lastName: '',\n          email: '',\n          userRole: '',\n          profilePicName: ''\n        },\n        found: false\n      };\n      this.noUserFoundMessage = '';\n      history.pushState(null, \"null\", window.location.href);\n      this.location.onPopState(() => {\n        history.pushState(null, \"null\", window.location.href);\n      });\n    }\n\n    ngOnInit() {\n      this.loginService.greetings().subscribe(e => this.greetingMessage = e);\n      sessionStorage.clear();\n      localStorage.clear();\n    }\n\n    sessionSave() {\n      sessionStorage.setItem('userId', JSON.stringify(this.userCredentials.user.userId));\n      sessionStorage.setItem('username', this.userCredentials.user.username);\n      sessionStorage.setItem('password', this.userCredentials.user.password);\n      sessionStorage.setItem('firstName', this.userCredentials.user.firstName);\n      sessionStorage.setItem('lastName', this.userCredentials.user.lastName);\n      sessionStorage.setItem('email', this.userCredentials.user.lastName);\n      sessionStorage.setItem('userRole', this.userCredentials.user.userRole);\n      sessionStorage.setItem('profilePicture', this.userCredentials.user.profilePicName);\n      sessionStorage.setItem('found', JSON.stringify(this.userCredentials.found));\n    }\n\n    userLoggedIn() {\n      let myUser = JSON.parse(sessionStorage.getItem('found'));\n      return myUser;\n    }\n\n    loginUser() {\n      this.loginService.findUserLogin(this.loginForm).subscribe();\n      this.loginService.findUserLogin(this.loginForm).subscribe(e => {\n        if (e.found == true) {\n          this.userCredentials = e;\n          this.sessionSave();\n          const moveTo = this.userCredentials.user.userRole.toLowerCase();\n\n          this._route.navigate([`/${moveTo}`]);\n        } else {\n          this.noUserFoundMessage = \"User not found\";\n        }\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.LocationStrategy));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 25,\n    vars: 5,\n    consts: [[1, \"background\"], [\"align\", \"center\"], [\"id\", \"login-form\"], [1, \"card\", \"card-container\"], [\"id\", \"profile-img\", \"src\", \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\", 1, \"profile-img-card\"], [\"novalidate\", \"\", 3, \"ngSubmit\"], [\"myLoginGroup\", \"ngForm\"], [\"for\", \"username\"], [\"required\", \"\", \"type\", \"text\", \"name\", \"username\", \"placeholder\", \"enter username\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"required\", \"\", \"type\", \"password\", \"name\", \"password\", \"placeholder\", \"enter password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [2, \"display\", \"inline-block\", \"white-space\", \"nowrap\", \"text-align\", \"right\", \"min-width\", \"70px\"], [\"routerLink\", \"/register\", 2, \"color\", \"dodgerblue\", \"cursor\", \"pointer\", \"margin-right\", \"15px\", \"margin-left\", \"120px\"], [\"routerLink\", \"/loginreset\", 2, \"color\", \"dodgerblue\", \"cursor\", \"pointer\"], [4, \"ngIf\"], [1, \"form-group\"], [\"type\", \"submit\", \"value\", \"Login\", 1, \"form-control\", 2, \"background-color\", \"DodgerBlue\", \"color\", \"#fff\", 3, \"disabled\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3);\n        i0.ɵɵelement(5, \"img\", 4);\n        i0.ɵɵelementStart(6, \"form\", 5, 6);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.loginUser();\n        });\n        i0.ɵɵelementStart(8, \"label\", 7);\n        i0.ɵɵtext(9, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.loginForm.username = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"label\", 9);\n        i0.ɵɵtext(12, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.loginForm.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"br\");\n        i0.ɵɵelementStart(15, \"div\", 11)(16, \"a\", 12);\n        i0.ɵɵtext(17, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"a\", 13);\n        i0.ɵɵtext(19, \"Forgot password?\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(20, \"br\");\n        i0.ɵɵtemplate(21, LoginComponent_div_21_Template, 2, 1, \"div\", 14);\n        i0.ɵɵelement(22, \"br\");\n        i0.ɵɵelementStart(23, \"div\", 15);\n        i0.ɵɵelement(24, \"input\", 16);\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(7);\n\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.greetingMessage);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.loginForm.username);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.loginForm.password);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.noUserFoundMessage != \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", _r0.invalid);\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i4.DefaultValueAccessor, i4.RequiredValidator, i4.NgControlStatus, i4.NgModel, i2.RouterLinkWithHref, i3.NgIf],\n    styles: [\"label[_ngcontent-%COMP%]{display:block;margin-top:10px}.card-container.card[_ngcontent-%COMP%]{max-width:400px!important;padding:40px}.card[_ngcontent-%COMP%]{background-color:#f7f7f7;padding:20px 25px 30px;margin:50px auto 25px;border-radius:2px;box-shadow:0 2px 2px #0000004d}.profile-img-card[_ngcontent-%COMP%]{width:80px;height:80px;margin:0 auto 10px;display:block;border-radius:50%}.login-form[_ngcontent-%COMP%]{position:relative;height:560px;width:405px;margin:auto;padding:60px;background-size:cover;box-shadow:0 30px 60px -5px #000}.background[_ngcontent-%COMP%]{background-image:url(photo-1657278127206-3299435f1cad.6e580ed13cd010ea.jpg);background-repeat:no-repeat;background-size:100%;background-attachment:fixed;background-position:center;padding-top:5%;padding-bottom:15%}\"]\n  });\n  LoginComponent.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginComponent,\n    factory: LoginComponent.ɵfac,\n    providedIn: 'root'\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}